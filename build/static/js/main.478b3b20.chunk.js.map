{"version":3,"sources":["modules/weather.ts","modules/index.ts","utils/palette.ts","utils/methods.tsx","utils/styles.ts","components/main/WeatherCarousel.tsx","api/index.ts","hooks/useLoadWeatherData.ts","components/main/WeatherMain.tsx","hooks/useRefreshCity.ts","lib/Button.tsx","components/side/WeatherInput.tsx","hooks/useAddCity.ts","hooks/useCityActions.ts","hooks/useDragItem.ts","components/side/WeatherItem.tsx","components/side/WeatherSide.tsx","components/WeatherApp.tsx","index.tsx"],"names":["LOADING","ERROR","ADD_CITY","SET_CITY","SELECT_CITY","REMOVE_CITY","TOGGLE_MARK","SET_CITIES","loading","createAction","error","addCity","city","setCity","selectCity","removeCity","adjacentCity","toggleMark","marked","setCities","cities","weather","createReducer","currentCity","state","action","payload","concat","map","item","name","filter","rootReducer","combineReducers","palette","red","50","100","200","300","400","500","600","700","800","900","a100","a200","a400","a700","pink","purple","deeppurple","indigo","blue","lightblue","cyan","teal","green","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","sky","kelToCel","kelvin","toFixed","dtTxtToDateAndTime","dt_txt","matchFour","match","matchTwo","date","year","month","day","time","hour","minute","second","toCasing","str","toUpperCase","slice","toLowerCase","join","cutRange","number","min","max","Math","secToText","sec","diff","floor","Date","now","getMonth","getDate","toDescription","id","test","toIcon","toColor","flex","direction","justify","align","css","WeatherCarouselBlock","styled","div","CarouselListBlock","ul","CarouselItemBlock","li","ArrowBlock","props","WeatherCarousel","useSelector","scrollPos","useRef","carouselRef","onClick","carousel","current","pos","CAROUSE_ITEM_WIDTH","document","documentElement","clientWidth","scrollWidth","exposedItemNum","utils","scrollLeft","onScroll","ref","forecast","className","dt","temp","React","memo","API_KEY","process","processPromise","promise","a","response","data","getCurrentWeather","cityName","axios","get","result","getForecastWeather","getAllWeather","resultCurrent","resultForecast","useLoadWeatherData","dispatch","useDispatch","currentData","currentError","forecastData","forecastError","alert","main","temp_min","temp_max","humidity","wind","speed","deg","pressure","list","WeatherMainBlock","color","MainInfoBlock","SubInfoBlock","SubInfoItemBlock","WindArrow","ImArrowUp","rotateKeyframe","keyframes","LoadingIndicator","AiOutlineLoading","RefreshButton","MdRefresh","WeatherMain","onRefreshCity","loadWeatherData","recentUpdate","useRefreshCity","Button","button","WeatherInputBlock","FormBox","form","InputBox","input","SubmitButton","CloseButton","WeatherInput","onToggleOpen","onAddCity","useCallback","find","useAddCity","useState","setInput","inputRef","useEffect","focus","onSubmit","e","preventDefault","autoComplete","type","onChange","target","value","placeholder","required","disabled","useCityActions","onSelectCity","onRemoveCity","index","indexOf","onInsertCity","toIndex","modified","onToggleMarkCity","useDragItem","e_down","timerId","setTimeout","closest","shiftY","clientY","getBoundingClientRect","top","width","height","y","classList","add","style","position","onpointermove","e_move","onpointerup","length","remove","clearTimeout","WeatherItemBlock","isSelected","ContentsBlock","InfoBlock","IconBlock","ConfigBlock","BookmarkBlock","RemovalBlock","WeatherItem","onPointerDown","WeatherSideBlock","opened","WeatherList","NoCities","SearchBlock","WeatherSide","open","setOpen","WeatherAppBlock","WeatherApp","json","localStorage","getItem","JSON","parse","setItem","stringify","ondragstart","onselectstart","oncontextmenu","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"oPA6CMA,EAAU,UACVC,EAAQ,QACRC,EAAW,WACXC,EAAW,WACXC,EAAc,cACdC,EAAc,cACdC,EAAc,cACdC,EAAa,aAENC,EAAUC,uBAAaT,EAAbS,GACVC,EAAQD,uBAAaR,GAAO,SAACS,GAAD,MAAiC,CACxEA,WADmBD,GAGRE,EAAUF,uBAAaP,GAAU,SAACU,GAAD,MAAiB,CAAEA,UAA1CH,GACVI,EAAUJ,uBAAaN,GAAU,SAACS,GAAD,MAAiB,CAAEA,UAA1CH,GACVK,EAAaL,uBAAaL,GAAa,SAACQ,GAAD,MAAiB,CACnEA,UADwBH,GAGbM,EAAaN,uBACxBJ,GACA,SAACO,EAAYI,GAAb,MAA4C,CAAEJ,OAAMI,kBAF5BP,GAIbQ,EAAaR,uBACxBH,GACA,SAACM,EAAYM,GAAb,MAAkC,CAChCN,OACAM,YAJsBT,GAObU,EAAYV,uBAAaF,GAAY,SAACa,GAAD,MAAqB,CACrEA,YADuBX,GAoFVY,EAtDCC,wBAPmB,CACjCd,SAAS,EACTE,MAAO,KACPU,OAAQ,GACRG,YAAa,OAGc,mBAC1BvB,GAAU,SAACwB,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBhB,SAAS,EAAME,MAAO,UAD9B,cAE1BT,GAAQ,SAACuB,EAAOC,GAAR,mBAAC,eACLD,GADI,IAEPhB,SAAS,EACTE,MAAOe,EAAOC,QAAQhB,WALG,cAO1BR,GAAW,SAACsB,EAAOC,GAAR,mBAAC,eACRD,GADO,IAEVhB,SAAS,EACTY,OAAQI,EAAMJ,OAAOO,OAAOF,EAAOC,QAAQd,MAC3CW,YAAaE,EAAOC,QAAQd,UAXH,cAa1BT,GAAW,SAACqB,EAAOC,GAAR,mBAAC,eACRD,GADO,IAEVhB,SAAS,EACTY,OAAQI,EAAMJ,OAAOQ,KAAI,SAACC,GAAD,OACvBA,EAAKC,OAASL,EAAOC,QAAQd,KAAKkB,KAAOL,EAAOC,QAAQd,KAAOiB,KAEjEN,YAAaE,EAAOC,QAAQd,UAnBH,cAqB1BR,GAAc,SAACoB,EAAOC,GAAR,mBAAC,eACXD,GADU,IAEbD,YAAaE,EAAOC,QAAQd,UAvBH,cAyB1BP,GAAc,SAACmB,EAAOC,GAAR,yBAAC,eACXD,GADU,IAGbJ,OAAQI,EAAMJ,OAAOW,QACnB,SAACF,GAAD,OAAUA,EAAKC,OAASL,EAAOC,QAAQd,KAAKkB,QAE9CP,aACE,UAAAC,EAAMD,mBAAN,eAAmBO,QAASL,EAAOC,QAAQd,KAAKkB,KAC5CL,EAAOC,QAAQV,aACfQ,EAAMD,iBAlCa,cAoC1BjB,GAAc,SAACkB,EAAOC,GAAR,mBAAC,eACXD,GADU,IAEbJ,OAAQI,EAAMJ,OAAOQ,KAAI,SAACC,GAAD,OACvBA,EAAKC,OAASL,EAAOC,QAAQd,KAAKkB,KAAlC,2BAESD,GAFT,IAGMX,QAASW,EAAKX,SAEhBW,UA5CmB,cA+C1BtB,GAAa,SAACiB,EAAOC,GAAR,mBAAC,eACVD,GADS,IAEZJ,OAAQK,EAAOC,QAAQN,OACvBG,YAAaC,EAAMD,aAAeE,EAAOC,QAAQN,OAAO,QAlD/B,ICjGdY,EAJKC,0BAAgB,CAClCZ,Y,sBCySaa,EA7SC,CACdC,IAAK,CACHC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERC,KAAM,CACJd,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERE,OAAQ,CACNf,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERG,WAAY,CACVhB,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERI,OAAQ,CACNjB,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERK,KAAM,CACJlB,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERM,UAAW,CACTnB,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERO,KAAM,CACJpB,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERQ,KAAM,CACJrB,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERS,MAAO,CACLtB,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERU,WAAY,CACVvB,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERW,KAAM,CACJxB,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERY,OAAQ,CACNzB,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERa,MAAO,CACL1B,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERc,OAAQ,CACN3B,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERe,WAAY,CACV5B,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERgB,MAAO,CACL7B,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,WAEPqB,KAAM,CACJ9B,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,WAEPsB,SAAU,CACR/B,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,WAEPuB,IAAK,CACH/B,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,Y,cC1RI6B,EAAW,SAACC,GAAD,OAAqBA,EAAS,QAAQC,QAAQ,IAgBzDC,EAAqB,SAACC,GACjC,IAAMC,EAAYD,EAAOE,MAAM,UACzBC,EAAWH,EAAOE,MAAM,UAc9B,MAZgB,CACdE,KAAM,CACJC,KAAMJ,EAAU,GAChBK,MAAOH,EAAS,GAChBI,IAAKJ,EAAS,IAEhBK,KAAM,CACJC,KAAMN,EAAS,GACfO,OAAQP,EAAS,GACjBQ,OAAQR,EAAS,MAOVS,EAAW,SAACC,GAAD,OACtBA,EAAM,CAACA,EAAI,GAAGC,cAAeD,EAAIE,MAAM,GAAGC,eAAeC,KAAK,IAAM,MAGzDC,EAAW,SAACC,EAAgBC,EAAaC,GAA9B,OACtBC,KAAKD,IAAIC,KAAKF,IAAID,EAAQE,GAAMD,IAGrBG,EAAY,SAACC,GACxB,IAAKA,EAAK,MAAO,OACjB,IAAMC,EAAOH,KAAKI,OAAOC,KAAKC,MAAQJ,GAAO,KAE7C,OAAIC,EAAO,GAAU,GAAN,OAAUA,EAAV,iBACNA,EAAO,KAAe,GAAN,OAAUH,KAAKI,MAAMD,EAAO,IAA5B,iBAChBA,EAAO,MAAoB,GAAN,OAAUH,KAAKI,MAAMD,EAAI,MAAzB,uBACrBA,EAAO,OACR,GAAN,OAAUH,KAAKI,MAAMD,EAAI,OAAzB,iBACG,UAAU,IAAIE,KAAKH,GAAKK,WAAxB,kBAAuC,IAAIF,KAAKH,GAAKM,UAArD,WAIMC,EAAgB,SAACC,GAC5B,QAAQ,GACN,IAAK,UAAUC,KAAKD,GAClB,MAAO,eACT,IAAK,UAAUC,KAAKD,GAClB,MAAO,eACT,IAAK,QAAQC,KAAKD,GAChB,MAAO,qBACT,IAAK,QAAQC,KAAKD,GAChB,MAAO,SACT,IAAK,QAAQC,KAAKD,GAChB,MAAO,SACT,IAAK,WAAWC,KAAKD,GACnB,MAAO,eACT,IAAK,aAAaC,KAAKD,GACrB,MAAO,eACT,IAAK,SAASC,KAAKD,GACjB,MAAO,eACT,IAAK,MAAMC,KAAKD,GACd,MAAO,eACT,IAAK,QAAQC,KAAKD,GAChB,MAAO,2BACT,IAAK,SAASC,KAAKD,GACjB,MAAO,2BACT,IAAK,MAAMC,KAAKD,GACd,MAAO,eACT,QACE,OAAO,OAKAE,EAAS,SAACF,GACrB,QAAQ,GACN,IAAK,UAAUC,KAAKD,GAClB,OAAO,cAAC,IAAD,IACT,IAAK,UAAUC,KAAKD,GAClB,OAAO,cAAC,IAAD,IACT,IAAK,WAAWC,KAAKD,GACnB,OAAO,cAAC,IAAD,IACT,IAAK,QAAQC,KAAKD,GAChB,OAAO,cAAC,IAAD,IACT,IAAK,QAAQC,KAAKD,GAChB,OAAO,cAAC,IAAD,IACT,IAAK,MAAMC,KAAKD,GACd,OAAO,cAAC,IAAD,IACT,IAAK,QAAQC,KAAKD,GAChB,OAAO,cAAC,IAAD,IACT,IAAK,SAASC,KAAKD,GACjB,OAAO,cAAC,IAAD,IACT,IAAK,MAAMC,KAAKD,GACd,OAAO,cAAC,IAAD,IACT,QACE,OAAO,OAKAG,EAAU,SAACH,GACtB,QAAQ,GACN,IAAK,aAAaC,KAAKD,GACrB,OAAOvE,EAAQkC,IAAI,KACrB,IAAK,QAAQsC,KAAKD,GAClB,IAAK,QAAQC,KAAKD,GAChB,OAAOvE,EAAQkC,IAAI,KACrB,IAAK,SAASsC,KAAKD,GACjB,OAAOvE,EAAQkC,IAAI,KACrB,IAAK,SAASsC,KAAKD,GACjB,OAAOvE,EAAQkC,IAAI,KACrB,QACE,MAAO,UCrIEyC,EAPF,eAACC,EAAD,uDAAa,MAAOC,EAApB,uDAA8B,SAAUC,EAAxC,uDAAgD,SAAhD,OAA6DC,YAA5D,IAAD,+GAEOH,EACCC,EACJC,ICEXE,EAAuBC,IAAOC,IAAV,6FACtBP,KAMEQ,EAAoBF,IAAOG,GAAV,qFACnBT,EAAK,MAAO,eAKVU,GAAoBJ,IAAOK,GAAV,wUACnBX,EAAK,WAmBHY,GAAaN,IAAOC,IAAV,kRACZP,KACO,SAACa,GAAD,MAAgC,SAApBA,EAAMZ,UAAuB,GAAK,KAGtC,SAACY,GAAD,MACK,SAApBA,EAAMZ,UAAuB,oBAAsB,uBAUjDa,GAAkB,WACtB,IAAMpG,EAAcqG,aAClB,SAACpG,GAAD,OAAsBA,EAAMH,QAAQE,eAGtC,IAAKA,EAAa,OAAO,KAEzB,IAAMsG,EAAYC,iBAAO,GACnBC,EAAcD,iBAAyB,MAOvCE,EAAU,SAAClB,GACf,IAAMmB,EAAWF,EAAYG,QACvBC,EAAMN,EAAUK,QAChBE,EACJC,SAASC,gBAAgBC,YAAc,IAAM,IAAM,GAErD,GAAKN,KAGY,SAAdnB,GACCqB,GAAOF,EAASO,YAAcP,EAASM,aAC1B,SAAdzB,GAAwBqB,GAAO,GAHlC,CAOA,IAAMM,EAAiB1C,KAAKI,MAC1B8B,EAASM,YAAcH,GAGzBP,EAAUK,QAAUQ,EAClBb,EAAUK,SACO,SAAdpB,EACGsB,EAAqBK,GACpBL,EAAqBK,GAC5B,EACAR,EAASO,YAAcP,EAASM,aAElCN,EAASU,WAAad,EAAUK,UAGlC,OACE,eAAChB,EAAD,WACE,cAACO,GAAD,CAAYX,UAAU,OAAOkB,QAAS,kBAAMA,EAAQ,SAApD,SACE,cAAC,IAAD,MAEF,cAACX,EAAD,CAAmBuB,SAxCN,WACVb,EAAYG,UACjBL,EAAUK,QAAUH,EAAYG,QAAQS,aAsCCE,IAAKd,EAA5C,SACGxG,EAAYuH,SAASlH,KAAI,SAACC,GAAD,OACxB,eAAC0F,GAAD,WACE,sBAAKwB,UAAU,WAAf,UACGlH,EAAKmH,GAAGnE,KAAKG,IADhB,UACuBnD,EAAKmH,GAAG/D,KAAKC,KADpC,YAGA,qBAAK6D,UAAU,OAAf,SAAuBL,EAAa7G,EAAK4E,MACzC,sBAAKsC,UAAU,OAAf,UAAuBL,EAAe7G,EAAKoH,KAAKf,SAAhD,aACA,qBAAKa,UAAU,kBAAf,SACGL,EAAoB7G,EAAK4E,QAPN5E,EAAK4C,aAYjC,cAACgD,GAAD,CAAYX,UAAU,OAAOkB,QAAS,kBAAMA,EAAQ,SAApD,SACE,cAAC,IAAD,UAMOkB,OAAMC,KAAKxB,I,kEC9HpByB,GAAUC,mC,SA6CDC,G,mFAAf,WAA8BC,GAA9B,gBAAAC,EAAA,+EAE2BD,EAF3B,cAEUE,EAFV,yBAGW,CACLC,KAAMD,EAASC,KACfhJ,MAAO,OALb,yDAQW,CAAEgJ,KAAM,KAAMhJ,MAAM,EAAD,KAR9B,0D,sBAYO,I,wBAAMiJ,GAAiB,yCAAG,WAAOC,GAAP,gBAAAJ,EAAA,sEACVF,GACnBO,KAAMC,IAAN,2DACsDF,EADtD,kBACwER,MAH3C,cACzBW,EADyB,yBAMxBA,GANwB,2CAAH,sDASjBC,GAAkB,yCAAG,WAAOJ,GAAP,gBAAAJ,EAAA,sEACXF,GACnBO,KAAMC,IAAN,4DACuDF,EADvD,kBACyER,MAH3C,cAC1BW,EAD0B,yBAMzBA,GANyB,2CAAH,sDASlBE,GAAa,yCAAG,WAAOL,GAAP,kBAAAJ,EAAA,sEACCG,GAAkBC,GADnB,cACrBM,EADqB,gBAEEF,GAAmBJ,GAFrB,cAErBO,EAFqB,yBAGpB,CAAED,gBAAeC,mBAHG,2CAAH,sDC/DX,SAASC,KACtB,IAAMC,EAAWC,cA8DjB,OA5DqB,yCAAG,WAAOxI,GAAP,kCAAA0H,EAAA,6DACtBa,EAAS7J,KADa,SAMZyJ,GAAcnI,GANF,uBAIpBoI,cAAuBK,EAJH,EAIHb,KAA0Bc,EAJvB,EAIgB9J,MAJhB,IAKpByJ,eAAwBM,EALJ,EAKFf,KAA2BgB,EALzB,EAKkBhK,MAGnC6J,GAAgBE,EARC,wBASpBJ,EAAS3J,EAAM,CAAE8J,eAAcE,mBAC/BC,MAAM,sBAVc,kBAWb,CACLjB,KAAM,KACNhJ,MAAO,CAAE8J,eAAcE,mBAbL,eAkBhBrJ,EAA0B,CAC9BoF,IAFIyB,EAAUqC,GAEFlJ,QAAQ,GAAGoF,GACvBwC,KAAM,CACJf,QAASQ,EAAeR,EAAQ0C,KAAK3B,MACrCpD,IAAK6C,EAAeR,EAAQ0C,KAAKC,UACjC/E,IAAK4C,EAAeR,EAAQ0C,KAAKE,WAEnCC,SAAU7C,EAAQ0C,KAAKG,SACvBC,KAAM,CACJC,MAAO/C,EAAQ8C,KAAKC,MACpBC,IAAKhD,EAAQ8C,KAAKE,KAEpBC,SAAUjD,EAAQ0C,KAAKO,UAGnBrC,EACJ2B,EACAW,KAAKxJ,KACL,SAACC,GAAD,MAA4B,CAC1B4C,OAAQ5C,EAAK4C,OACbuE,GAAIN,EAAyB7G,EAAK4C,QAClCgC,GAAI5E,EAAKR,QAAQ,GAAGoF,GACpBwC,KAAM,CACJf,QAASrG,EAAK+I,KAAK3B,MAErB8B,SAAUlJ,EAAK+I,KAAKG,SACpBC,KAAM,CACJC,MAAOpJ,EAAKmJ,KAAKC,MACjBC,IAAKrJ,EAAKmJ,KAAKE,SA9CC,kBAmDf,CACLxB,KAAM,CACJrI,UACAyH,YAEFpI,MAAO,OAxDa,4CAAH,sDCJvB,I,kBAAM2K,GAAmBlE,IAAOC,IAAV,qTAClBP,EAAK,UAIa3E,EAAQgC,KAAK,MAEnB,SAACwD,GAAD,OAAWA,EAAM4D,SACtB,SAAC5D,GAAD,OAAWA,EAAM4D,OAAS,WAS/BC,GAAgBpE,IAAOC,IAAV,+XACfP,EAAK,UAGHA,IAKAA,KAiBA2E,GAAerE,IAAOC,IAAV,4IACdP,EAAK,QAOH4E,GAAmBtE,IAAOC,IAAV,8VAClBP,EAAK,UAOoB3E,EAAQgC,KAAK,MAYpCwH,GAAYvE,YAAOwE,KAAPxE,CAAH,mFAEO,SAACO,GAAD,OAAWA,EAAMwD,IAAM,IAAM,SAG7CU,GAAiBC,YAAH,wHASdC,GAAmB3E,YAAO4E,KAAP5E,CAAH,wGACXjF,EAAQqB,UAAU,KAEdqI,IAGTI,GAAgB7E,YAAO8E,IAAP9E,CAAH,8PAeb+E,GAAc,WAClB,IAAM1L,EAAUoH,aAAY,SAACpG,GAAD,OAAsBA,EAAMH,QAAQb,WAC1De,EAAcqG,aAClB,SAACpG,GAAD,OAAsBA,EAAMH,QAAQE,eAEhC8I,EAAWC,cACX6B,ECxHO,WACb,IAAMC,EAAkBhC,KAkBxB,OAfE,SAACxJ,GAAD,gDACA,WAAOyJ,GAAP,oBAAAb,EAAA,sEACgC4C,EAAgBxL,EAAKkB,MADrD,mBACU4H,EADV,EACUA,KAAMhJ,EADhB,EACgBA,MACTgJ,IAAQhJ,EAFf,iDAIE2J,EACExJ,EAAQ,2BACHD,GADE,IAELS,QAASqI,EAAKrI,QACdyH,SAAUY,EAAKZ,SACfuD,aAAcjG,KAAKC,UATzB,2CADA,uDDoHoBiG,GAEtB,GAAI9L,EACF,OACE,eAAC6K,GAAD,WACE,cAACS,GAAD,IADF,gBAMJ,IAAKvK,EACH,OAAO,cAAC8J,GAAD,+BAjBe,IAoBtBvJ,EASEP,EATFO,KApBsB,EA6BpBP,EARFF,QACEoF,EAtBoB,EAsBpBA,GACQyB,EAvBY,EAuBpBe,KAAQf,QACR6C,EAxBoB,EAwBpBA,SAxBoB,IAyBpBC,KAAQC,EAzBY,EAyBZA,MAAOC,EAzBK,EAyBLA,IACfC,EA1BoB,EA0BpBA,SAEFkB,EACE9K,EADF8K,aAGF,OACE,eAAChB,GAAD,CAAkBC,MAAO5C,EAAcjC,GAAvC,UACE,eAAC8E,GAAD,WACE,sBAAKxC,UAAU,SAAf,UACGL,EAAgB2D,GACjB,cAACL,GAAD,CAAehE,QAAS,kBAAMqC,EAAS8B,EAAc5K,UAEvD,qBAAKwH,UAAU,OAAf,SAAuBjH,IACvB,qBAAKiH,UAAU,OAAf,SAAuBL,EAAajC,KACpC,sBAAKsC,UAAU,OAAf,UAAuBb,EAAvB,aACA,qBAAKa,UAAU,kBAAf,SAAkCL,EAAoBjC,QAExD,eAAC+E,GAAD,WACE,eAACC,GAAD,WACE,qBAAK1C,UAAU,MAAf,0BACA,gCAAMgC,EAAN,WAEF,eAACU,GAAD,WACE,qBAAK1C,UAAU,MAAf,0BACA,gCACE,cAAC2C,GAAD,CAAWR,IAAKA,IACfD,EAFH,aAKF,eAACQ,GAAD,WACE,qBAAK1C,UAAU,MAAf,0BACA,gCAAMoC,EAAN,gBAGJ,cAAC,GAAD,QAKSjC,UAAWgD,I,SE5KXK,GATApF,IAAOqF,OAAV,0IACR3F,EAAK,QCMT,IAAM4F,GAAoBtF,IAAOC,IAAV,4DACnBP,EAAK,QAIH6F,GAAUvF,IAAOwF,KAAV,6KAISzK,EAAQgC,KAAK,MAK7B0I,GAAWzF,IAAO0F,MAAV,oRAME3K,EAAQgC,KAAK,MAUvB4I,GAAe3F,YAAOoF,GAAPpF,CAAH,mKAQZ4F,GAAc5F,YAAOoF,GAAPpF,CAAH,iSAEKjF,EAAQC,IAAI,KAGvBD,EAAQC,IAAI,MAcjB6K,GAAe,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,aAChBzM,EAAUoH,aAAY,SAACpG,GAAD,OAAsBA,EAAMH,QAAQb,WAC1D6J,EAAWC,cACX4C,EC9DO,WACb,IAAM9L,EAASwG,aAAY,SAACpG,GAAD,OAAsBA,EAAMH,QAAQD,UACzDgL,EAAkBhC,KAwBxB,OAtBkB+C,uBAChB,SAAC7H,GAAD,gDACE,WAAO+E,GAAP,sBAAAb,EAAA,0DACQ1H,EAAO4G,EAAepD,MACflE,EAAOgM,MAAK,SAACxM,GAAD,OAAUA,EAAKkB,OAASA,KAFnD,iEAIgCsK,EAAgBtK,GAJhD,mBAIU4H,EAJV,EAIUA,KAAMhJ,EAJhB,EAIgBA,MACTgJ,IAAQhJ,EALf,mDAOE2J,EACE1J,EAAQ,CACNmB,OACAT,QAASqI,EAAKrI,QACdyH,SAAUY,EAAKZ,SACf5H,QAAQ,EACRmL,aAAcjG,KAAKC,SAbzB,4CADF,wDAkBA,CAACjF,IDuCeiM,GAH0C,EAKlCC,mBAAS,IALyB,oBAKrDT,EALqD,KAK9CU,EAL8C,KAMtDC,EAAW1F,iBAAyB,MAgB1C,OAJA2F,qBAAU,YACHjN,GAAWgN,EAAStF,SAASsF,EAAStF,QAAQwF,UAClD,CAAClN,IAGF,eAACiM,GAAD,WACE,eAACC,GAAD,CAASiB,SAZQ,SAACC,GACpBA,EAAEC,iBACFxD,EAAS6C,EAAUL,IACnBU,EAAS,KAS0BO,aAAa,MAA9C,UACE,cAAClB,GAAD,CACE9K,KAAK,OACLiM,KAAK,OACLC,SApBS,SAACJ,GAChBL,EAASK,EAAEK,OAAOC,QAoBZA,MAAOrB,EACPsB,YAAY,sBACZC,UAAQ,EACRC,SAAU7N,EACVqI,IAAK2E,IAEP,cAACV,GAAD,CAAciB,KAAK,SAAnB,SACE,cAAC,IAAD,SAGJ,cAAChB,GAAD,CAAa/E,QAASiF,EAAtB,SACE,cAAC,IAAD,UAMO/D,OAAMC,KAAK6D,I,kBEtGX,SAASsB,KACtB,IAAMlN,EAASwG,aAAY,SAACpG,GAAD,OAAsBA,EAAMH,QAAQD,UACzDiJ,EAAWC,cAqCjB,MAAO,CAAEiE,aAnCYpB,uBAAY,SAACvM,GAChCyJ,EAASvJ,EAAWF,MACnB,IAiCoB4N,aA/BFrB,uBACnB,SAACvM,GACC,IAAM6N,EAAQ1I,KAAKD,IAAI1E,EAAOsN,QAAQ9N,GAAO,GACvCI,EAAeI,EAAOqN,EAAQ,GAChCrN,EAAOqN,EAAQ,GACfA,EAAQ,GAAK,GAAKrN,EAAOqN,EAAQ,GACjCrN,EAAOqN,EAAQ,GACf,KAEJpE,EAAStJ,EAAWH,EAAMI,MAE5B,CAACI,IAoBkCuN,aAjBhBxB,uBACnB,SAACvM,EAAYgO,GACX,IAAIC,EAAWzN,EAAOW,QAAO,SAACF,GAAD,OAAUA,EAAKC,OAASlB,EAAKkB,QAC1D+M,EAAQ,uBACHA,EAASrJ,MAAM,EAAGoJ,IADf,CAENhO,GAFM,aAGHiO,EAASrJ,MAAMoJ,KAEpBvE,EAASlJ,EAAU0N,MAErB,CAACzN,IAOgD0N,iBAJ1B3B,uBAAY,SAACvM,GACpCyJ,EAASpJ,EAAWL,GAAOA,EAAKM,WAC/B,KCzCL,I,oCAyDe6N,GAzDK,WAClB,IAAM3N,EAASwG,aAAY,SAACpG,GAAD,OAAsBA,EAAMH,QAAQD,UADvC,EAEekN,KAA/BC,EAFgB,EAEhBA,aAAcI,EAFE,EAEFA,aAoDtB,OAlDsBxB,uBACpB,SAAC6B,EAA4CpO,GAE3C,IAAMqO,EAAUC,YAAW,WACzB,IACMrN,EADSmN,EAAOf,OACFkB,QAAQ,UAEtBC,EAASJ,EAAOK,QAAUxN,EAAKyN,wBAAwBC,IACvDC,EAAQ3N,EAAKyN,wBAAwBE,MACrCC,EAAS5N,EAAKyN,wBAAwBG,OAAS,EACjDC,EAAIV,EAAOK,QAAUD,EAAS,EAElCvN,EAAK8N,UAAUC,IAAI,WACnB/N,EAAKgO,MAAMC,SAAW,QACtBjO,EAAKgO,MAAMN,IAAX,UAAoBG,EAApB,MACA7N,EAAKgO,MAAML,MAAX,UAAsBA,EAAtB,MAEAnH,SAAS0H,cAAgB,SAACC,GACxBN,EAAIM,EAAOX,QAAUD,EAAS,EAC9BvN,EAAKgO,MAAMN,IAAX,UAAoBG,EAApB,OAGFrH,SAAS4H,YAAc,WACrB,IAAMxB,EAAQ/F,EACZ3C,KAAKI,MAAMuJ,EAAID,GACf,EACArO,EAAO8O,OAAS,GAGdzB,IAAUrN,EAAOsN,QAAQ9N,IAAO+N,EAAa/N,EAAM6N,GAEvD5M,EAAK8N,UAAUQ,OAAO,WACtBtO,EAAKgO,MAAMC,SAAW,GACtBjO,EAAKgO,MAAMN,IAAM,GACjB1N,EAAKgO,MAAML,MAAQ,GAEnBnH,SAAS0H,cAAgB,KACzB1H,SAAS4H,YAAc,QAExB,KAEH5H,SAAS4H,YAAc,WACrBG,aAAanB,GACbV,EAAa3N,GACbyH,SAAS4H,YAAc,QAG3B,CAAC7O,EAAQmN,EAAcI,KC/CrB0B,GAAmBlJ,IAAOK,GAAV,oaAClBX,EAAK,MAAO,kBAGV,SAACa,GAAD,OAAYA,EAAM4I,WAAapO,EAAQiC,SAAS,KAAOjC,EAAQgC,KAAK,QAiBpEqM,GAAgBpJ,IAAOC,IAAV,qJACfP,EAAK,MAAO,kBAWV2J,GAAYrJ,IAAOC,IAAV,mHACXP,EAAK,SAAU,OAAQ,SASrB4J,GAAYtJ,IAAOC,IAAV,wDACXP,KAIE6J,GAAcvJ,IAAOC,IAAV,yEACbP,EAAK,UAEO3E,EAAQgC,KAAK,MAGvByM,GAAgBxJ,IAAOC,IAAV,0JACfP,IAIc3E,EAAQ2B,OAAO,KAGf3B,EAAQ2B,OAAO,MAI3B+M,GAAezJ,IAAOC,IAAV,0JACdP,IAIc3E,EAAQC,IAAI,KAGZD,EAAQC,IAAI,MASxB0O,GAAc,SAAC,GAA4C,IAA1CjQ,EAAyC,EAAzCA,KAAM0P,EAAmC,EAAnCA,WAAmC,EACnBhC,KAAnCE,EADsD,EACtDA,aAAcM,EADwC,EACxCA,iBAChBgC,EAAgB/B,KAGpBjN,EAKElB,EALFkB,KAL4D,EAU1DlB,EAJFS,QACEoF,EAP0D,EAO1DA,GAP0D,IAQ1DwC,KAAQpD,EARkD,EAQlDA,IAAKC,EAR6C,EAQ7CA,IAIjB,OACE,eAACuK,GAAD,CAAkBtH,UAAU,QAAQuH,WAAYA,EAAhD,UACE,eAACC,GAAD,CAAeO,cAAe,SAAClD,GAAD,OAAOkD,EAAclD,EAAGhN,IAAtD,UACE,eAAC4P,GAAD,WACE,qBAAKzH,UAAU,OAAf,SAAuBjH,IACvB,sBAAKiH,UAAU,OAAf,UACGlD,EADH,MACWC,EADX,aAGA,qBAAKiD,UAAU,KAAf,SAAqBtC,GAAMiC,EAAoBjC,QAEjD,cAACgK,GAAD,UAAY/H,EAAajC,QAE3B,eAACiK,GAAD,WACE,cAACC,GAAD,CAAe3I,QAAS,kBAAM8G,EAAiBlO,IAA/C,SACGA,EAAKM,OAAS,cAAC,IAAD,IAAiB,cAAC,IAAD,MAElC,cAAC0P,GAAD,CAAc5I,QAAS,kBAAMwG,EAAa5N,IAA1C,SACE,cAAC,KAAD,aAOKsI,OAAMC,KAAK0H,ICvHpBE,GAAmB5J,IAAOC,IAAV,gWAClBP,EAAK,SAAU,OAAQ,SAQd,SAACa,GAAD,OAAYA,EAAMsJ,OAAS,OAAS,WAKpB9O,EAAQgC,KAAK,MAIpC+M,GAAc9J,IAAOC,IAAV,iFACbP,EAAK,SAAU,OAAQ,SAKrBqK,GAAW/J,IAAOC,IAAV,qDACVP,EAAK,QAIHsK,GAAchK,YAAOoF,GAAPpF,CAAH,gWAIUjF,EAAQgC,KAAK,KACXhC,EAAQgC,KAAK,KAO7BhC,EAAQgC,KAAK,MAKpBkN,GAAc,WAAO,IAAD,EACQxJ,aAC9B,SAACpG,GAAD,OAAsBA,EAAMH,WADtBE,EADgB,EAChBA,YAAaH,EADG,EACHA,OADG,EAIAkM,oBAAS,GAJT,oBAIjB+D,EAJiB,KAIXC,EAJW,KAKlBrE,EAAeE,uBAAY,kBAAMmE,GAASD,KAAO,CAACA,IAExD,OACE,qCACE,cAACF,GAAD,CAAanJ,QAASiF,EAAtB,SACE,cAAC,IAAD,MAEF,eAAC8D,GAAD,CAAkBC,OAAQK,EAA1B,UACE,cAAC,GAAD,CAAcpE,aAAcA,IAC3B7L,EACC,cAAC6P,GAAD,UACG7P,EAAOQ,KAAI,SAAChB,GAAD,OACV,cAAC,GAAD,CAEEA,KAAMA,EACN0P,aACE/O,GAAcA,EAAYO,OAASlB,EAAKkB,MAHrClB,EAAKkB,WAShB,cAACoP,GAAD,sCAOKhI,OAAMC,KAAKiI,ICnFpBG,GAAkBpK,IAAOC,IAAV,mFAiCNoK,GA3BI,WACjB,IAAMpQ,EAASwG,aAAY,SAACpG,GAAD,OAAsBA,EAAMH,QAAQD,UACzDiJ,EAAWC,cAiBjB,OAfAmD,qBAAU,WACR,IAAMgE,EAAOC,aAAaC,QAAQ,iBAClC,GAAKF,EAAL,CAEA,IAAMrQ,EAASwQ,KAAKC,MAAMJ,GAC1BpH,EAASlJ,EAAUC,OAClB,IAEHqM,qBAAU,WACRiE,aAAaI,QACX,gBACAF,KAAKG,UAAU3Q,EAAOW,QAAO,SAACnB,GAAD,OAAUA,EAAKM,cAE7C,CAACE,IAGF,eAACmQ,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,Q,SCzBNlJ,SAAS2J,YAAc,kBAAM,GAC7B3J,SAAS4J,cAAgB,kBAAM,GAC/B5J,SAAS6J,cAAgB,kBAAM,GAE/B,IAAMC,GAAQC,sBACZpQ,EACAqQ,+BAAoBC,0BAAgBC,OAGtCC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,IAAMO,WAAP,UACE,cAAC,GAAD,QAGJrK,SAASsK,eAAe,W","file":"static/js/main.478b3b20.chunk.js","sourcesContent":["import { ActionType, createAction, createReducer } from 'typesafe-actions';\r\nimport type { dt } from '../utils/methods';\r\n\r\nexport type CurrentWeather = {\r\n  id: string;\r\n  temp: {\r\n    current: string;\r\n    min: string;\r\n    max: string;\r\n  };\r\n  humidity: number;\r\n  wind: {\r\n    speed: number;\r\n    deg: number;\r\n  };\r\n  pressure: number;\r\n};\r\n\r\nexport type ForecastWeather = {\r\n  dt_txt: string;\r\n  dt: dt;\r\n  id: string;\r\n  temp: {\r\n    current: number;\r\n  };\r\n  humidity: number;\r\n  wind: {\r\n    speed: number;\r\n    deg: number;\r\n  };\r\n};\r\n\r\nexport type City = {\r\n  name: string;\r\n  weather: CurrentWeather;\r\n  forecast: ForecastWeather[];\r\n  marked: boolean;\r\n  recentUpdate: number;\r\n};\r\n\r\nexport type WeatherError = {\r\n  currentError: Error | null;\r\n  forecastError: Error | null;\r\n};\r\n\r\nconst LOADING = 'LOADING';\r\nconst ERROR = 'ERROR';\r\nconst ADD_CITY = 'ADD_CITY';\r\nconst SET_CITY = 'SET_CITY';\r\nconst SELECT_CITY = 'SELECT_CITY';\r\nconst REMOVE_CITY = 'REMOVE_CITY';\r\nconst TOGGLE_MARK = 'TOGGLE_MARK';\r\nconst SET_CITIES = 'SET_CITIES';\r\n\r\nexport const loading = createAction(LOADING)();\r\nexport const error = createAction(ERROR, (error: WeatherError | null) => ({\r\n  error,\r\n}))();\r\nexport const addCity = createAction(ADD_CITY, (city: City) => ({ city }))();\r\nexport const setCity = createAction(SET_CITY, (city: City) => ({ city }))();\r\nexport const selectCity = createAction(SELECT_CITY, (city: City) => ({\r\n  city,\r\n}))();\r\nexport const removeCity = createAction(\r\n  REMOVE_CITY,\r\n  (city: City, adjacentCity: City | null) => ({ city, adjacentCity }),\r\n)();\r\nexport const toggleMark = createAction(\r\n  TOGGLE_MARK,\r\n  (city: City, marked: boolean) => ({\r\n    city,\r\n    marked,\r\n  }),\r\n)();\r\nexport const setCities = createAction(SET_CITIES, (cities: City[]) => ({\r\n  cities,\r\n}))();\r\n\r\ntype WeatherState = {\r\n  loading: boolean;\r\n  error: WeatherError | null;\r\n  cities: City[];\r\n  currentCity: City | null;\r\n};\r\n\r\nconst actions = {\r\n  loading,\r\n  error,\r\n  addCity,\r\n  setCity,\r\n  selectCity,\r\n  removeCity,\r\n  toggleMark,\r\n  setCities,\r\n};\r\nexport type WeatherAction = ActionType<typeof actions>;\r\n\r\nconst initialState: WeatherState = {\r\n  loading: false,\r\n  error: null,\r\n  cities: [],\r\n  currentCity: null,\r\n};\r\n\r\nconst weather = createReducer<WeatherState, WeatherAction>(initialState, {\r\n  [LOADING]: (state) => ({ ...state, loading: true, error: null }),\r\n  [ERROR]: (state, action) => ({\r\n    ...state,\r\n    loading: false,\r\n    error: action.payload.error,\r\n  }),\r\n  [ADD_CITY]: (state, action) => ({\r\n    ...state,\r\n    loading: false,\r\n    cities: state.cities.concat(action.payload.city),\r\n    currentCity: action.payload.city,\r\n  }),\r\n  [SET_CITY]: (state, action) => ({\r\n    ...state,\r\n    loading: false,\r\n    cities: state.cities.map((item) =>\r\n      item.name === action.payload.city.name ? action.payload.city : item,\r\n    ),\r\n    currentCity: action.payload.city,\r\n  }),\r\n  [SELECT_CITY]: (state, action) => ({\r\n    ...state,\r\n    currentCity: action.payload.city,\r\n  }),\r\n  [REMOVE_CITY]: (state, action) => ({\r\n    ...state,\r\n\r\n    cities: state.cities.filter(\r\n      (item) => item.name !== action.payload.city.name,\r\n    ),\r\n    currentCity:\r\n      state.currentCity?.name === action.payload.city.name\r\n        ? action.payload.adjacentCity\r\n        : state.currentCity,\r\n  }),\r\n  [TOGGLE_MARK]: (state, action) => ({\r\n    ...state,\r\n    cities: state.cities.map((item) =>\r\n      item.name === action.payload.city.name\r\n        ? {\r\n            ...item,\r\n            marked: !item.marked,\r\n          }\r\n        : item,\r\n    ),\r\n  }),\r\n  [SET_CITIES]: (state, action) => ({\r\n    ...state,\r\n    cities: action.payload.cities,\r\n    currentCity: state.currentCity || action.payload.cities[0],\r\n  }),\r\n});\r\n\r\nexport default weather;\r\n","import { combineReducers } from 'redux';\r\nimport weather from './weather';\r\n\r\nconst rootReducer = combineReducers({\r\n  weather,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","const palette = {\r\n  red: {\r\n    50: '#ffebee',\r\n    100: '#ffcdd2',\r\n    200: '#ef9a9a',\r\n    300: '#e57373',\r\n    400: '#ef5350',\r\n    500: '#f44336',\r\n    600: '#e53935',\r\n    700: '#d32f2f',\r\n    800: '#c62828',\r\n    900: '#b71c1c',\r\n    a100: '#ff8a80',\r\n    a200: '#ff5252',\r\n    a400: '#ff1744',\r\n    a700: '#d50000',\r\n  },\r\n  pink: {\r\n    50: '#fce4ec',\r\n    100: '#f8bbd0',\r\n    200: '#f48fb1',\r\n    300: '#f06292',\r\n    400: '#ec407a',\r\n    500: '#e91e63',\r\n    600: '#d81b60',\r\n    700: '#c2185b',\r\n    800: '#ad1457',\r\n    900: '#880e4f',\r\n    a100: '#ff80ab',\r\n    a200: '#ff4081',\r\n    a400: '#f50057',\r\n    a700: '#c51162',\r\n  },\r\n  purple: {\r\n    50: '#f3e5f5',\r\n    100: '#e1bee7',\r\n    200: '#ce93d8',\r\n    300: '#ba68c8',\r\n    400: '#ab47bc',\r\n    500: '#9c27b0',\r\n    600: '#8e24aa',\r\n    700: '#7b1fa2',\r\n    800: '#6a1b9a',\r\n    900: '#4a148c',\r\n    a100: '#ea80fc',\r\n    a200: '#e040fb',\r\n    a400: '#d500f9',\r\n    a700: '#aa00ff',\r\n  },\r\n  deeppurple: {\r\n    50: '#ede7f6',\r\n    100: '#d1c4e9',\r\n    200: '#b39ddb',\r\n    300: '#9575cd',\r\n    400: '#7e57c2',\r\n    500: '#673ab7',\r\n    600: '#5e35b1',\r\n    700: '#512da8',\r\n    800: '#4527a0',\r\n    900: '#311b92',\r\n    a100: '#b388ff',\r\n    a200: '#7c4dff',\r\n    a400: '#651fff',\r\n    a700: '#6200ea',\r\n  },\r\n  indigo: {\r\n    50: '#e8eaf6',\r\n    100: '#c5cae9',\r\n    200: '#9fa8da',\r\n    300: '#7986cb',\r\n    400: '#5c6bc0',\r\n    500: '#3f51b5',\r\n    600: '#3949ab',\r\n    700: '#303f9f',\r\n    800: '#283593',\r\n    900: '#1a237e',\r\n    a100: '#8c9eff',\r\n    a200: '#536dfe',\r\n    a400: '#3d5afe',\r\n    a700: '#304ffe',\r\n  },\r\n  blue: {\r\n    50: '#e3f2fd',\r\n    100: '#bbdefb',\r\n    200: '#90caf9',\r\n    300: '#64b5f6',\r\n    400: '#42a5f5',\r\n    500: '#2196f3',\r\n    600: '#1e88e5',\r\n    700: '#1976d2',\r\n    800: '#1565c0',\r\n    900: '#0d47a1',\r\n    a100: '#82b1ff',\r\n    a200: '#448aff',\r\n    a400: '#2979ff',\r\n    a700: '#2962ff',\r\n  },\r\n  lightblue: {\r\n    50: '#e1f5fe',\r\n    100: '#b3e5fc',\r\n    200: '#81d4fa',\r\n    300: '#4fc3f7',\r\n    400: '#29b6f6',\r\n    500: '#03a9f4',\r\n    600: '#039be5',\r\n    700: '#0288d1',\r\n    800: '#0277bd',\r\n    900: '#01579b',\r\n    a100: '#80d8ff',\r\n    a200: '#40c4ff',\r\n    a400: '#00b0ff',\r\n    a700: '#0091ea',\r\n  },\r\n  cyan: {\r\n    50: '#e0f7fa',\r\n    100: '#b2ebf2',\r\n    200: '#80deea',\r\n    300: '#4dd0e1',\r\n    400: '#26c6da',\r\n    500: '#00bcd4',\r\n    600: '#00acc1',\r\n    700: '#0097a7',\r\n    800: '#00838f',\r\n    900: '#006064',\r\n    a100: '#84ffff',\r\n    a200: '#18ffff',\r\n    a400: '#00e5ff',\r\n    a700: '#00b8d4',\r\n  },\r\n  teal: {\r\n    50: '#e0f2f1',\r\n    100: '#b2dfdb',\r\n    200: '#80cbc4',\r\n    300: '#4db6ac',\r\n    400: '#26a69a',\r\n    500: '#009688',\r\n    600: '#00897b',\r\n    700: '#00796b',\r\n    800: '#00695c',\r\n    900: '#004d40',\r\n    a100: '#a7ffeb',\r\n    a200: '#64ffda',\r\n    a400: '#1de9b6',\r\n    a700: '#00bfa5',\r\n  },\r\n  green: {\r\n    50: '#e8f5e9',\r\n    100: '#c8e6c9',\r\n    200: '#a5d6a7',\r\n    300: '#81c784',\r\n    400: '#66bb6a',\r\n    500: '#4caf50',\r\n    600: '#43a047',\r\n    700: '#388e3c',\r\n    800: '#2e7d32',\r\n    900: '#1b5e20',\r\n    a100: '#b9f6ca',\r\n    a200: '#69f0ae',\r\n    a400: '#00e676',\r\n    a700: '#00c853',\r\n  },\r\n  lightgreen: {\r\n    50: '#f1f8e9',\r\n    100: '#dcedc8',\r\n    200: '#c5e1a5',\r\n    300: '#aed581',\r\n    400: '#9ccc65',\r\n    500: '#8bc34a',\r\n    600: '#7cb342',\r\n    700: '#689f38',\r\n    800: '#558b2f',\r\n    900: '#33691e',\r\n    a100: '#ccff90',\r\n    a200: '#b2ff59',\r\n    a400: '#76ff03',\r\n    a700: '#64dd17',\r\n  },\r\n  lime: {\r\n    50: '#f9fbe7',\r\n    100: '#f0f4c3',\r\n    200: '#e6ee9c',\r\n    300: '#dce775',\r\n    400: '#d4e157',\r\n    500: '#cddc39',\r\n    600: '#c0ca33',\r\n    700: '#afb42b',\r\n    800: '#9e9d24',\r\n    900: '#827717',\r\n    a100: '#f4ff81',\r\n    a200: '#eeff41',\r\n    a400: '#c6ff00',\r\n    a700: '#aeea00',\r\n  },\r\n  yellow: {\r\n    50: '#fffde7',\r\n    100: '#fff9c4',\r\n    200: '#fff59d',\r\n    300: '#fff176',\r\n    400: '#ffee58',\r\n    500: '#ffeb3b',\r\n    600: '#fdd835',\r\n    700: '#fbc02d',\r\n    800: '#f9a825',\r\n    900: '#f57f17',\r\n    a100: '#ffff8d',\r\n    a200: '#ffff00',\r\n    a400: '#ffea00',\r\n    a700: '#ffd600',\r\n  },\r\n  amber: {\r\n    50: '#fff8e1',\r\n    100: '#ffecb3',\r\n    200: '#ffe082',\r\n    300: '#ffd54f',\r\n    400: '#ffca28',\r\n    500: '#ffc107',\r\n    600: '#ffb300',\r\n    700: '#ffa000',\r\n    800: '#ff8f00',\r\n    900: '#ff6f00',\r\n    a100: '#ffe57f',\r\n    a200: '#ffd740',\r\n    a400: '#ffc400',\r\n    a700: '#ffab00',\r\n  },\r\n  orange: {\r\n    50: '#fff3e0',\r\n    100: '#ffe0b2',\r\n    200: '#ffcc80',\r\n    300: '#ffb74d',\r\n    400: '#ffa726',\r\n    500: '#ff9800',\r\n    600: '#fb8c00',\r\n    700: '#f57c00',\r\n    800: '#ef6c00',\r\n    900: '#e65100',\r\n    a100: '#ffd180',\r\n    a200: '#ffab40',\r\n    a400: '#ff9100',\r\n    a700: '#ff6d00',\r\n  },\r\n  deeporange: {\r\n    50: '#fbe9e7',\r\n    100: '#ffccbc',\r\n    200: '#ffab91',\r\n    300: '#ff8a65',\r\n    400: '#ff7043',\r\n    500: '#ff5722',\r\n    600: '#f4511e',\r\n    700: '#e64a19',\r\n    800: '#d84315',\r\n    900: '#bf360c',\r\n    a100: '#ff9e80',\r\n    a200: '#ff6e40',\r\n    a400: '#ff3d00',\r\n    a700: '#dd2c00',\r\n  },\r\n  brown: {\r\n    50: '#efebe9',\r\n    100: '#d7ccc8',\r\n    200: '#bcaaa4',\r\n    300: '#a1887f',\r\n    400: '#8d6e63',\r\n    500: '#795548',\r\n    600: '#6d4c41',\r\n    700: '#5d4037',\r\n    800: '#4e342e',\r\n    900: '#3e2723',\r\n  },\r\n  grey: {\r\n    50: '#fafafa',\r\n    100: '#f5f5f5',\r\n    200: '#eeeeee',\r\n    300: '#e0e0e0',\r\n    400: '#bdbdbd',\r\n    500: '#9e9e9e',\r\n    600: '#757575',\r\n    700: '#616161',\r\n    800: '#424242',\r\n    900: '#212121',\r\n  },\r\n  bluegrey: {\r\n    50: '#eceff1',\r\n    100: '#cfd8dc',\r\n    200: '#b0bec5',\r\n    300: '#90a4ae',\r\n    400: '#78909c',\r\n    500: '#607d8b',\r\n    600: '#546e7a',\r\n    700: '#455a64',\r\n    800: '#37474f',\r\n    900: '#263238',\r\n  },\r\n  sky: {\r\n    100: '#31A1FF',\r\n    200: '#64C4FF',\r\n    300: '#99B2C4',\r\n    400: '#4B5E63',\r\n  },\r\n};\r\n\r\nexport default palette;\r\n","import React from 'react';\r\nimport palette from './palette';\r\nimport {\r\n  BsSun,\r\n  BsCloud,\r\n  BsClouds,\r\n  BsCloudSun,\r\n  BsCloudFog,\r\n  BsCloudRain,\r\n  BsCloudSnow,\r\n  BsCloudLightning,\r\n  BsCloudLightningRain,\r\n} from 'react-icons/bs';\r\n\r\n// 온도 단위를 kelvin에서 celsius로 변환 및 소수점을 1개로 고정\r\nexport const kelToCel = (kelvin: number) => (kelvin - 273.15).toFixed(1);\r\n\r\n// dt_txt 형식에서 date 및 time 추출\r\nexport type dt = {\r\n  date: {\r\n    year: string;\r\n    month: string;\r\n    day: string;\r\n  };\r\n  time: {\r\n    hour: string;\r\n    minute: string;\r\n    second: string;\r\n  };\r\n};\r\n\r\nexport const dtTxtToDateAndTime = (dt_txt: string) => {\r\n  const matchFour = dt_txt.match(/\\d{4}/g) as RegExpMatchArray;\r\n  const matchTwo = dt_txt.match(/\\d{2}/g) as RegExpMatchArray;\r\n\r\n  const res: dt = {\r\n    date: {\r\n      year: matchFour[0],\r\n      month: matchTwo[2],\r\n      day: matchTwo[3],\r\n    },\r\n    time: {\r\n      hour: matchTwo[4],\r\n      minute: matchTwo[5],\r\n      second: matchTwo[6],\r\n    },\r\n  };\r\n  return res;\r\n};\r\n\r\n// 대소문자 casing 변환\r\nexport const toCasing = (str: string) =>\r\n  str ? [str[0].toUpperCase(), str.slice(1).toLowerCase()].join('') : null;\r\n\r\n// 최솟값과 최댓값 사이의 값으로 변환\r\nexport const cutRange = (number: number, min: number, max: number) =>\r\n  Math.max(Math.min(number, max), min);\r\n\r\n// 시간 값을 텍스트로 변환\r\nexport const secToText = (sec: number) => {\r\n  if (!sec) return 'null';\r\n  const diff = Math.floor((Date.now() - sec) / 1000);\r\n\r\n  if (diff < 60) return `${diff}초 전`;\r\n  else if (diff < 60 * 60) return `${Math.floor(diff / 60)}분 전`;\r\n  else if (diff < 60 * 60 * 24) return `${Math.floor(diff / (60 * 60))}시간 전`;\r\n  else if (diff < 60 * 60 * 24 * 7)\r\n    return `${Math.floor(diff / (60 * 60 * 24))}일 전`;\r\n  else return `${new Date(sec).getMonth()}월 ${new Date(sec).getDate()}일`;\r\n};\r\n\r\n// 날씨 id를 description으로 변환\r\nexport const toDescription = (id: string) => {\r\n  switch (true) {\r\n    case /2[12]\\d/.test(id):\r\n      return '낙뢰';\r\n    case /2[03]\\d/.test(id):\r\n      return '뇌우';\r\n    case /3\\d\\d/.test(id):\r\n      return '이슬비';\r\n    case /5\\d\\d/.test(id):\r\n      return '비';\r\n    case /6\\d\\d/.test(id):\r\n      return '눈';\r\n    case /7[0124]1/.test(id):\r\n      return '안개';\r\n    case /7[356][12]/.test(id):\r\n      return '황사';\r\n    case /7[78]1/.test(id):\r\n      return '돌풍';\r\n    case /800/.test(id):\r\n      return '맑음';\r\n    case /80[1]/.test(id):\r\n      return '구름조금';\r\n    case /80[23]/.test(id):\r\n      return '구름많음';\r\n    case /804/.test(id):\r\n      return '흐림';\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\n// 날씨 id를 아이콘으로 변환\r\nexport const toIcon = (id: string) => {\r\n  switch (true) {\r\n    case /2[12]\\d/.test(id):\r\n      return <BsCloudLightning />;\r\n    case /2[03]\\d/.test(id):\r\n      return <BsCloudLightningRain />;\r\n    case /[35]\\d\\d/.test(id):\r\n      return <BsCloudRain />;\r\n    case /6\\d\\d/.test(id):\r\n      return <BsCloudSnow />;\r\n    case /7\\d\\d/.test(id):\r\n      return <BsCloudFog />;\r\n    case /800/.test(id):\r\n      return <BsSun />;\r\n    case /80[1]/.test(id):\r\n      return <BsCloudSun />;\r\n    case /80[23]/.test(id):\r\n      return <BsCloud />;\r\n    case /804/.test(id):\r\n      return <BsClouds />;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\n// 날씨 id에 맞는 색상을 반환\r\nexport const toColor = (id: string) => {\r\n  switch (true) {\r\n    case /[2356]\\d\\d/.test(id):\r\n      return palette.sky[400];\r\n    case /7\\d\\d/.test(id):\r\n    case /80[4]/.test(id):\r\n      return palette.sky[300];\r\n    case /80[23]/.test(id):\r\n      return palette.sky[200];\r\n    case /80[01]/.test(id):\r\n      return palette.sky[100];\r\n    default:\r\n      return 'white';\r\n  }\r\n};\r\n","import { css } from 'styled-components';\r\n\r\nconst flex = (direction = 'row', justify = 'center', align = 'center') => css`\r\n  display: flex;\r\n  flex-direction: ${direction};\r\n  justify-content: ${justify};\r\n  align-items: ${align};\r\n`;\r\n\r\nexport default flex;\r\n","import React, { useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdNavigateBefore, MdNavigateNext } from 'react-icons/md';\r\nimport * as utils from '../../utils/methods';\r\nimport flex from '../../utils/styles';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from 'modules';\r\n\r\nconst WeatherCarouselBlock = styled.div`\r\n  ${flex()}\r\n  position: relative;\r\n  width: 90%;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst CarouselListBlock = styled.ul`\r\n  ${flex('row', 'flex-start')}\r\n  overflow-x: scroll;\r\n  scroll-behavior: smooth;\r\n`;\r\n\r\nconst CarouselItemBlock = styled.li`\r\n  ${flex('column')}\r\n  flex-shrink: 0;\r\n  flex-basis: 8rem;\r\n  max-width: 128px;\r\n  padding: 0.5rem;\r\n  margin-bottom: 1rem;\r\n  font-size: 1rem;\r\n  .icon {\r\n    font-size: 2rem;\r\n  }\r\n  .description {\r\n    font-size: 0.75rem;\r\n  }\r\n  @media (max-width: 430px) {\r\n    max-width: 72px;\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\n\r\nconst ArrowBlock = styled.div<{ direction: string }>`\r\n  ${flex()}\r\n  right: ${(props) => (props.direction === 'prev' ? '' : 0)};\r\n  height: 100%;\r\n  padding: 1.5rem 0;\r\n  border-radius: ${(props) =>\r\n    props.direction === 'prev' ? '0.5rem 0 0 0.5rem' : '0 0.5rem 0.5rem 0'};\r\n  background: rgba(255, 255, 255, 0);\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.25);\r\n  }\r\n  &:active {\r\n    background: rgba(255, 255, 255, 0.5);\r\n  }\r\n`;\r\n\r\nconst WeatherCarousel = () => {\r\n  const currentCity = useSelector(\r\n    (state: RootState) => state.weather.currentCity,\r\n  );\r\n\r\n  if (!currentCity) return null;\r\n\r\n  const scrollPos = useRef(0);\r\n  const carouselRef = useRef<HTMLUListElement>(null);\r\n\r\n  const onScroll = () => {\r\n    if (!carouselRef.current) return;\r\n    scrollPos.current = carouselRef.current.scrollLeft;\r\n  };\r\n\r\n  const onClick = (direction: string) => {\r\n    const carousel = carouselRef.current;\r\n    const pos = scrollPos.current;\r\n    const CAROUSE_ITEM_WIDTH =\r\n      document.documentElement.clientWidth > 430 ? 128 : 72;\r\n\r\n    if (!carousel) return;\r\n\r\n    if (\r\n      (direction === 'next' &&\r\n        pos >= carousel.scrollWidth - carousel.clientWidth) ||\r\n      (direction === 'prev' && pos <= 0)\r\n    )\r\n      return;\r\n\r\n    const exposedItemNum = Math.floor(\r\n      carousel.clientWidth / CAROUSE_ITEM_WIDTH,\r\n    );\r\n\r\n    scrollPos.current = utils.cutRange(\r\n      scrollPos.current +\r\n        (direction === 'next'\r\n          ? CAROUSE_ITEM_WIDTH * exposedItemNum\r\n          : -CAROUSE_ITEM_WIDTH * exposedItemNum),\r\n      0,\r\n      carousel.scrollWidth - carousel.clientWidth,\r\n    );\r\n    carousel.scrollLeft = scrollPos.current;\r\n  };\r\n\r\n  return (\r\n    <WeatherCarouselBlock>\r\n      <ArrowBlock direction=\"prev\" onClick={() => onClick('prev')}>\r\n        <MdNavigateBefore />\r\n      </ArrowBlock>\r\n      <CarouselListBlock onScroll={onScroll} ref={carouselRef}>\r\n        {currentCity.forecast.map((item) => (\r\n          <CarouselItemBlock key={item.dt_txt}>\r\n            <div className=\"date kor\">\r\n              {item.dt.date.day}일 {item.dt.time.hour}시\r\n            </div>\r\n            <div className=\"icon\">{utils.toIcon(item.id)}</div>\r\n            <div className=\"temp\">{utils.kelToCel(item.temp.current)} ℃</div>\r\n            <div className=\"description kor\">\r\n              {utils.toDescription(item.id)}\r\n            </div>\r\n          </CarouselItemBlock>\r\n        ))}\r\n      </CarouselListBlock>\r\n      <ArrowBlock direction=\"next\" onClick={() => onClick('next')}>\r\n        <MdNavigateNext />\r\n      </ArrowBlock>\r\n    </WeatherCarouselBlock>\r\n  );\r\n};\r\n\r\nexport default React.memo(WeatherCarousel);\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\n\r\nexport type CurrentWeatherData = {\r\n  weather: [\r\n    {\r\n      id: string;\r\n    },\r\n  ];\r\n  main: {\r\n    temp: number;\r\n    temp_min: number;\r\n    temp_max: number;\r\n    pressure: number;\r\n    humidity: number;\r\n  };\r\n  wind: {\r\n    speed: number;\r\n    deg: number;\r\n  };\r\n  dt: number;\r\n};\r\n\r\nexport type ForecastWeatherDataItem = {\r\n  weather: [\r\n    {\r\n      id: string;\r\n    },\r\n  ];\r\n  main: {\r\n    temp: number;\r\n    humidity: number;\r\n  };\r\n  wind: {\r\n    speed: number;\r\n    deg: number;\r\n  };\r\n  dt: number;\r\n  dt_txt: string;\r\n};\r\n\r\ntype Response = {\r\n  data: CurrentWeatherData | { list: Array<ForecastWeatherDataItem> } | null;\r\n  error: Error | null;\r\n};\r\n\r\nasync function processPromise(promise: Promise<Response>): Promise<Response> {\r\n  try {\r\n    const response = await promise;\r\n    return {\r\n      data: response.data,\r\n      error: null,\r\n    };\r\n  } catch (e) {\r\n    return { data: null, error: e as Error };\r\n  }\r\n}\r\n\r\nexport const getCurrentWeather = async (cityName: string) => {\r\n  const result = await processPromise(\r\n    axios.get(\r\n      `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY}`,\r\n    ),\r\n  );\r\n  return result;\r\n};\r\n\r\nexport const getForecastWeather = async (cityName: string) => {\r\n  const result = await processPromise(\r\n    axios.get(\r\n      `http://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${API_KEY}`,\r\n    ),\r\n  );\r\n  return result;\r\n};\r\n\r\nexport const getAllWeather = async (cityName: string) => {\r\n  const resultCurrent = await getCurrentWeather(cityName);\r\n  const resultForecast = await getForecastWeather(cityName);\r\n  return { resultCurrent, resultForecast };\r\n};\r\n","import {\r\n  CurrentWeather,\r\n  error,\r\n  ForecastWeather,\r\n  loading,\r\n} from 'modules/weather';\r\nimport {\r\n  CurrentWeatherData,\r\n  ForecastWeatherDataItem,\r\n  getAllWeather,\r\n} from 'api';\r\nimport * as utils from 'utils/methods';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport default function useLoadWeatherData() {\r\n  const dispatch = useDispatch();\r\n\r\n  const loadWeatherData = async (name: string) => {\r\n    dispatch(loading());\r\n\r\n    const {\r\n      resultCurrent: { data: currentData, error: currentError },\r\n      resultForecast: { data: forecastData, error: forecastError },\r\n    } = await getAllWeather(name);\r\n\r\n    if (!currentData || !forecastData) {\r\n      dispatch(error({ currentError, forecastError }));\r\n      alert('No search results.');\r\n      return {\r\n        data: null,\r\n        error: { currentError, forecastError },\r\n      };\r\n    }\r\n\r\n    const current = currentData as CurrentWeatherData;\r\n    const weather: CurrentWeather = {\r\n      id: current.weather[0].id,\r\n      temp: {\r\n        current: utils.kelToCel(current.main.temp),\r\n        min: utils.kelToCel(current.main.temp_min),\r\n        max: utils.kelToCel(current.main.temp_max),\r\n      },\r\n      humidity: current.main.humidity,\r\n      wind: {\r\n        speed: current.wind.speed,\r\n        deg: current.wind.deg,\r\n      },\r\n      pressure: current.main.pressure,\r\n    };\r\n\r\n    const forecast: ForecastWeather[] = (\r\n      forecastData as { list: ForecastWeatherDataItem[] }\r\n    ).list.map(\r\n      (item): ForecastWeather => ({\r\n        dt_txt: item.dt_txt,\r\n        dt: utils.dtTxtToDateAndTime(item.dt_txt),\r\n        id: item.weather[0].id,\r\n        temp: {\r\n          current: item.main.temp,\r\n        },\r\n        humidity: item.main.humidity,\r\n        wind: {\r\n          speed: item.wind.speed,\r\n          deg: item.wind.deg,\r\n        },\r\n      }),\r\n    );\r\n\r\n    return {\r\n      data: {\r\n        weather,\r\n        forecast,\r\n      },\r\n      error: null,\r\n    };\r\n  };\r\n\r\n  return loadWeatherData;\r\n}\r\n","import * as React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport WeatherMainForecast from './WeatherCarousel';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { AiOutlineLoading } from 'react-icons/ai';\r\nimport { ImArrowUp } from 'react-icons/im';\r\nimport { MdRefresh } from 'react-icons/md';\r\nimport * as utils from '../../utils/methods';\r\nimport palette from '../../utils/palette';\r\nimport flex from '../../utils/styles';\r\nimport { RootState } from 'modules';\r\nimport useRefreshCity from 'hooks/useRefreshCity';\r\n\r\nconst WeatherMainBlock = styled.div<{ color?: string }>`\r\n  ${flex('column')};\r\n  flex-grow: 2;\r\n  width: 60%;\r\n  position: relative;\r\n  border: 1px solid ${palette.grey[400]};\r\n  border-radius: 0.25rem;\r\n  background: ${(props) => props.color};\r\n  color: ${(props) => props.color && 'white'};\r\n  font-size: 2rem;\r\n  transition: background 0.5s;\r\n  overflow-y: scroll;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst MainInfoBlock = styled.div`\r\n  ${flex('column')};\r\n  margin-bottom: 1rem;\r\n  .recent {\r\n    ${flex()};\r\n    font-size: 1rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .city {\r\n    ${flex()}\r\n    font-weight: bold;\r\n  }\r\n  .icon {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1rem;\r\n    font-size: 5rem;\r\n  }\r\n  .temp {\r\n  }\r\n  .description {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst SubInfoBlock = styled.div`\r\n  ${flex('row')};\r\n  width: 90%;\r\n  padding: 0.5rem;\r\n  border-radius: 0.5rem;\r\n  background: rgba(255, 255, 255, 0.25);\r\n`;\r\n\r\nconst SubInfoItemBlock = styled.div`\r\n  ${flex('column')};\r\n  flex-grow: 1;\r\n  flex-basis: 1rem;\r\n  align-items: center;\r\n  padding: 0.5rem;\r\n  font-size: 1rem;\r\n  & + & {\r\n    border-left: 1px solid ${palette.grey[100]};\r\n  }\r\n  div:last-child {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  @media (max-width: 430px) {\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\n\r\nconst WindArrow = styled(ImArrowUp)<{ deg: number }>`\r\n  margin-right: 0.25rem;\r\n  transform: rotate(${(props) => props.deg + 180 + 'deg'});\r\n`;\r\n\r\nconst rotateKeyframe = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst LoadingIndicator = styled(AiOutlineLoading)`\r\n  color: ${palette.lightblue[200]};\r\n  font-size: 3rem;\r\n  animation: ${rotateKeyframe} 0.5s infinite linear;\r\n`;\r\n\r\nconst RefreshButton = styled(MdRefresh)`\r\n  margin-left: 0.25rem;\r\n  color: white;\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n  transition: transform 0.25s;\r\n  &:hover {\r\n    opacity: 0.75;\r\n  }\r\n  &:active {\r\n    opacity: 0.5;\r\n    transform: rotate(180deg);\r\n  }\r\n`;\r\n\r\nconst WeatherMain = () => {\r\n  const loading = useSelector((state: RootState) => state.weather.loading);\r\n  const currentCity = useSelector(\r\n    (state: RootState) => state.weather.currentCity,\r\n  );\r\n  const dispatch = useDispatch();\r\n  const onRefreshCity = useRefreshCity();\r\n\r\n  if (loading)\r\n    return (\r\n      <WeatherMainBlock>\r\n        <LoadingIndicator />\r\n        Loading...\r\n      </WeatherMainBlock>\r\n    );\r\n\r\n  if (!currentCity)\r\n    return <WeatherMainBlock>Select the city.</WeatherMainBlock>;\r\n\r\n  const {\r\n    name,\r\n    weather: {\r\n      id,\r\n      temp: { current },\r\n      humidity,\r\n      wind: { speed, deg },\r\n      pressure,\r\n    },\r\n    recentUpdate,\r\n  } = currentCity;\r\n\r\n  return (\r\n    <WeatherMainBlock color={utils.toColor(id)}>\r\n      <MainInfoBlock>\r\n        <div className=\"recent\">\r\n          {utils.secToText(recentUpdate)}\r\n          <RefreshButton onClick={() => dispatch(onRefreshCity(currentCity))} />\r\n        </div>\r\n        <div className=\"city\">{name}</div>\r\n        <div className=\"icon\">{utils.toIcon(id)}</div>\r\n        <div className=\"temp\">{current} ℃</div>\r\n        <div className=\"description kor\">{utils.toDescription(id)}</div>\r\n      </MainInfoBlock>\r\n      <SubInfoBlock>\r\n        <SubInfoItemBlock>\r\n          <div className=\"kor\">습도</div>\r\n          <div>{humidity} %</div>\r\n        </SubInfoItemBlock>\r\n        <SubInfoItemBlock>\r\n          <div className=\"kor\">바람</div>\r\n          <div>\r\n            <WindArrow deg={deg} />\r\n            {speed} m/s\r\n          </div>\r\n        </SubInfoItemBlock>\r\n        <SubInfoItemBlock>\r\n          <div className=\"kor\">기압</div>\r\n          <div>{pressure} hPa</div>\r\n        </SubInfoItemBlock>\r\n      </SubInfoBlock>\r\n      <WeatherMainForecast />\r\n    </WeatherMainBlock>\r\n  );\r\n};\r\n\r\nexport default React.memo(WeatherMain);\r\n","import { City, setCity, WeatherAction } from 'modules/weather';\r\nimport useLoadWeatherData from './useLoadWeatherData';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { RootState } from 'modules';\r\n\r\nexport default function useRefreshCity() {\r\n  const loadWeatherData = useLoadWeatherData();\r\n\r\n  const onRefreshCity =\r\n    (city: City): ThunkAction<void, RootState, null, WeatherAction> =>\r\n    async (dispatch) => {\r\n      const { data, error } = await loadWeatherData(city.name);\r\n      if (!data || error) return;\r\n\r\n      dispatch(\r\n        setCity({\r\n          ...city,\r\n          weather: data.weather,\r\n          forecast: data.forecast,\r\n          recentUpdate: Date.now(),\r\n        }),\r\n      );\r\n    };\r\n\r\n  return onRefreshCity;\r\n}\r\n","import styled from 'styled-components';\r\nimport flex from '../utils/styles';\r\n\r\nconst Button = styled.button`\r\n  ${flex('row')}\r\n  padding: 0.5rem;\r\n  border: none;\r\n  background: white;\r\n  font-size: 1.25rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default Button;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdOutlineAdd, MdOutlineClose } from 'react-icons/md';\r\nimport Button from '../../lib/Button';\r\nimport palette from '../../utils/palette';\r\nimport flex from '../../utils/styles';\r\nimport useAddCity from 'hooks/useAddCity';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from 'modules';\r\n\r\nconst WeatherInputBlock = styled.div`\r\n  ${flex('row')}\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst FormBox = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-grow: 1;\r\n  border: 1px solid ${palette.grey[200]};\r\n  border-radius: 0.25rem;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst InputBox = styled.input`\r\n  flex-grow: 1;\r\n  width: 100%;\r\n  border: none;\r\n  outline: none;\r\n  padding: 0 0.5rem;\r\n  background: ${palette.grey[200]};\r\n  transition: background 0.25s;\r\n  &:focus {\r\n    background: white;\r\n  }\r\n  @media (max-width: 768px) {\r\n    placeholder: 'Ente';\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled(Button)`\r\n  border-radius: 0 0.25rem 0.25rem 0;\r\n  &:active {\r\n    opacity: 0.5;\r\n  }\r\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\r\n`;\r\n\r\nconst CloseButton = styled(Button)`\r\n  display: none;\r\n  border: 1px solid ${palette.red[200]};\r\n  border-radius: 0.25rem;\r\n  margin-left: 0.5rem;\r\n  color: ${palette.red[500]};\r\n  &:active {\r\n    opacity: 0.5;\r\n  }\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n  }\r\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\r\n`;\r\n\r\ntype WeatherInputProps = {\r\n  onToggleOpen: () => void;\r\n};\r\n\r\nconst WeatherInput = ({ onToggleOpen }: WeatherInputProps) => {\r\n  const loading = useSelector((state: RootState) => state.weather.loading);\r\n  const dispatch = useDispatch();\r\n  const onAddCity = useAddCity();\r\n\r\n  const [input, setInput] = useState('');\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(onAddCity(input));\r\n    setInput('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loading && inputRef.current) inputRef.current.focus();\r\n  }, [loading]);\r\n\r\n  return (\r\n    <WeatherInputBlock>\r\n      <FormBox onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <InputBox\r\n          name=\"city\"\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          value={input}\r\n          placeholder=\"Enter the city name\"\r\n          required\r\n          disabled={loading}\r\n          ref={inputRef}\r\n        />\r\n        <SubmitButton type=\"submit\">\r\n          <MdOutlineAdd />\r\n        </SubmitButton>\r\n      </FormBox>\r\n      <CloseButton onClick={onToggleOpen}>\r\n        <MdOutlineClose />\r\n      </CloseButton>\r\n    </WeatherInputBlock>\r\n  );\r\n};\r\n\r\nexport default React.memo(WeatherInput);\r\n","import { useCallback } from 'react';\r\nimport { RootState } from 'modules';\r\nimport { WeatherAction, addCity } from 'modules/weather';\r\nimport { useSelector } from 'react-redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport * as utils from '../utils/methods';\r\nimport useLoadWeatherData from './useLoadWeatherData';\r\n\r\nexport default function useAddcity() {\r\n  const cities = useSelector((state: RootState) => state.weather.cities);\r\n  const loadWeatherData = useLoadWeatherData();\r\n\r\n  const onAddCity = useCallback(\r\n    (str: string): ThunkAction<void, RootState, null, WeatherAction> =>\r\n      async (dispatch) => {\r\n        const name = utils.toCasing(str);\r\n        if (!name || cities.find((city) => city.name === name)) return;\r\n\r\n        const { data, error } = await loadWeatherData(name);\r\n        if (!data || error) return;\r\n\r\n        dispatch(\r\n          addCity({\r\n            name,\r\n            weather: data.weather,\r\n            forecast: data.forecast,\r\n            marked: false,\r\n            recentUpdate: Date.now(),\r\n          }),\r\n        );\r\n      },\r\n    [cities],\r\n  );\r\n\r\n  return onAddCity;\r\n}\r\n","import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  City,\r\n  removeCity,\r\n  selectCity,\r\n  setCities,\r\n  toggleMark,\r\n} from 'modules/weather';\r\nimport { RootState } from 'modules';\r\n\r\nexport default function useCityActions() {\r\n  const cities = useSelector((state: RootState) => state.weather.cities);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSelectCity = useCallback((city: City) => {\r\n    dispatch(selectCity(city));\r\n  }, []);\r\n\r\n  const onRemoveCity = useCallback(\r\n    (city: City) => {\r\n      const index = Math.max(cities.indexOf(city), 0);\r\n      const adjacentCity = cities[index + 1]\r\n        ? cities[index + 1]\r\n        : index - 1 >= 0 && cities[index - 1]\r\n        ? cities[index - 1]\r\n        : null;\r\n\r\n      dispatch(removeCity(city, adjacentCity));\r\n    },\r\n    [cities],\r\n  );\r\n\r\n  const onInsertCity = useCallback(\r\n    (city: City, toIndex: number) => {\r\n      let modified = cities.filter((item) => item.name !== city.name);\r\n      modified = [\r\n        ...modified.slice(0, toIndex),\r\n        city,\r\n        ...modified.slice(toIndex),\r\n      ];\r\n      dispatch(setCities(modified));\r\n    },\r\n    [cities],\r\n  );\r\n\r\n  const onToggleMarkCity = useCallback((city: City) => {\r\n    dispatch(toggleMark(city, !city.marked));\r\n  }, []);\r\n\r\n  return { onSelectCity, onRemoveCity, onInsertCity, onToggleMarkCity };\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { City } from 'modules/weather';\r\nimport * as utils from 'utils/methods';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from 'modules';\r\nimport useCityActions from './useCityActions';\r\n\r\nconst useDragItem = () => {\r\n  const cities = useSelector((state: RootState) => state.weather.cities);\r\n  const { onSelectCity, onInsertCity } = useCityActions();\r\n\r\n  const onPointerDown = useCallback(\r\n    (e_down: React.PointerEvent<HTMLDivElement>, city: City) => {\r\n      // onHold event\r\n      const timerId = setTimeout(() => {\r\n        const target = e_down.target as HTMLDivElement;\r\n        const item = target.closest('.block') as HTMLLIElement;\r\n\r\n        const shiftY = e_down.clientY - item.getBoundingClientRect().top;\r\n        const width = item.getBoundingClientRect().width;\r\n        const height = item.getBoundingClientRect().height + 8;\r\n        let y = e_down.clientY - shiftY - 8;\r\n\r\n        item.classList.add('grabbed');\r\n        item.style.position = 'fixed';\r\n        item.style.top = `${y}px`;\r\n        item.style.width = `${width}px`;\r\n\r\n        document.onpointermove = (e_move) => {\r\n          y = e_move.clientY - shiftY - 8;\r\n          item.style.top = `${y}px`;\r\n        };\r\n\r\n        document.onpointerup = () => {\r\n          const index = utils.cutRange(\r\n            Math.floor(y / height),\r\n            0,\r\n            cities.length - 1,\r\n          );\r\n\r\n          if (index !== cities.indexOf(city)) onInsertCity(city, index);\r\n\r\n          item.classList.remove('grabbed');\r\n          item.style.position = '';\r\n          item.style.top = '';\r\n          item.style.width = '';\r\n\r\n          document.onpointermove = null;\r\n          document.onpointerup = null;\r\n        };\r\n      }, 500);\r\n      // onClick event\r\n      document.onpointerup = () => {\r\n        clearTimeout(timerId);\r\n        onSelectCity(city);\r\n        document.onpointerup = null;\r\n      };\r\n    },\r\n    [cities, onSelectCity, onInsertCity],\r\n  );\r\n\r\n  return onPointerDown;\r\n};\r\n\r\nexport default useDragItem;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../utils/palette';\r\nimport flex from '../../utils/styles';\r\nimport { BsStar, BsStarFill } from 'react-icons/bs';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport * as utils from '../../utils/methods';\r\nimport type { City } from '../../modules/weather';\r\nimport useCityActions from 'hooks/useCityActions';\r\nimport useDragItem from 'hooks/useDragItem';\r\n\r\nconst WeatherItemBlock = styled.li<{ isSelected: boolean }>`\r\n  ${flex('row', 'space-between')}\r\n  flex-shrink: 0;\r\n  border: 1px solid\r\n    ${(props) => (props.isSelected ? palette.bluegrey[200] : palette.grey[200])};\r\n  border-radius: 0.25rem;\r\n  margin-top: 8px;\r\n  margin-right: 1rem;\r\n  min-width: 12rem;\r\n  background: white;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  touch-action: none;\r\n  transform: none;\r\n  transition: transform 0.25s;\r\n  &.grabbed {\r\n    transform: scale(1.05);\r\n  }\r\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\r\n`;\r\n\r\nconst ContentsBlock = styled.div`\r\n  ${flex('row', 'space-between')}\r\n  flex-grow: 1;\r\n  padding: 0.5rem;\r\n  &:hover {\r\n    opacity: 0.75;\r\n  }\r\n  &:active {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst InfoBlock = styled.div`\r\n  ${flex('column', 'auto', 'auto')}\r\n  .name {\r\n    font-weight: bold;\r\n  }\r\n  .id {\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\n\r\nconst IconBlock = styled.div`\r\n  ${flex()}\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst ConfigBlock = styled.div`\r\n  ${flex('column')}\r\n  height: 100%;\r\n  background: ${palette.grey[200]};\r\n`;\r\n\r\nconst BookmarkBlock = styled.div`\r\n  ${flex()}\r\n  flex-grow: 1;\r\n  padding: 0.5rem;\r\n  &:hover {\r\n    background: ${palette.yellow[400]};\r\n  }\r\n  &:active {\r\n    background: ${palette.yellow[600]};\r\n  }\r\n`;\r\n\r\nconst RemovalBlock = styled.div`\r\n  ${flex()}\r\n  flex-grow: 1;\r\n  padding: 0.5rem;\r\n  &:hover {\r\n    background: ${palette.red[200]};\r\n  }\r\n  &:active {\r\n    background: ${palette.red[400]};\r\n  }\r\n`;\r\n\r\ntype WeatherItemProps = {\r\n  city: City;\r\n  isSelected: boolean;\r\n};\r\n\r\nconst WeatherItem = ({ city, isSelected }: WeatherItemProps) => {\r\n  const { onRemoveCity, onToggleMarkCity } = useCityActions();\r\n  const onPointerDown = useDragItem();\r\n\r\n  const {\r\n    name,\r\n    weather: {\r\n      id,\r\n      temp: { min, max },\r\n    },\r\n  } = city;\r\n\r\n  return (\r\n    <WeatherItemBlock className=\"block\" isSelected={isSelected}>\r\n      <ContentsBlock onPointerDown={(e) => onPointerDown(e, city)}>\r\n        <InfoBlock>\r\n          <div className=\"name\">{name}</div>\r\n          <div className=\"temp\">\r\n            {min} / {max} ℃\r\n          </div>\r\n          <div className=\"id\">{id && utils.toDescription(id)}</div>\r\n        </InfoBlock>\r\n        <IconBlock>{utils.toIcon(id)}</IconBlock>\r\n      </ContentsBlock>\r\n      <ConfigBlock>\r\n        <BookmarkBlock onClick={() => onToggleMarkCity(city)}>\r\n          {city.marked ? <BsStarFill /> : <BsStar />}\r\n        </BookmarkBlock>\r\n        <RemovalBlock onClick={() => onRemoveCity(city)}>\r\n          <FaTrashAlt />\r\n        </RemovalBlock>\r\n      </ConfigBlock>\r\n    </WeatherItemBlock>\r\n  );\r\n};\r\n\r\nexport default React.memo(WeatherItem);\r\n","import React, { useState, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport WeatherInput from './WeatherInput';\r\nimport WeatherItem from './WeatherItem';\r\nimport styled from 'styled-components';\r\nimport { MdOutlineSearch } from 'react-icons/md';\r\nimport Button from '../../lib/Button';\r\nimport palette from '../../utils/palette';\r\nimport flex from '../../utils/styles';\r\nimport { RootState } from 'modules';\r\n\r\nconst WeatherSideBlock = styled.div<{ opened: boolean }>`\r\n  ${flex('column', 'auto', 'auto')}\r\n  flex-grow: 1;\r\n  width: 30%;\r\n  padding-left: 1rem;\r\n  background: white;\r\n  transition: right 0.25s;\r\n  @media (max-width: 768px) {\r\n    position: fixed;\r\n    right: ${(props) => (props.opened ? '0rem' : '-16rem')};\r\n    min-width: 16rem;\r\n    max-width: 100%;\r\n    height: calc(100% - 2rem);\r\n    padding-right: 1rem;\r\n    border-left: 1px solid ${palette.grey[400]};\r\n  }\r\n`;\r\n\r\nconst WeatherList = styled.div`\r\n  ${flex('column', 'auto', 'auto')}\r\n  height: 100%;\r\n  overflow: hidden scroll;\r\n`;\r\n\r\nconst NoCities = styled.div`\r\n  ${flex('row')}\r\n  height: 100%;\r\n`;\r\n\r\nconst SearchBlock = styled(Button)`\r\n  position: fixed;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  border-left: 1px solid ${palette.grey[400]};\r\n  border-bottom: 1px solid ${palette.grey[400]};\r\n  border-radius: 0 0 0 0.5rem;\r\n  visibility: hidden;\r\n  @media (max-width: 768px) {\r\n    visibility: visible;\r\n  }\r\n  &:active {\r\n    color: ${palette.grey[400]};\r\n  }\r\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\r\n`;\r\n\r\nconst WeatherSide = () => {\r\n  const { currentCity, cities } = useSelector(\r\n    (state: RootState) => state.weather,\r\n  );\r\n  const [open, setOpen] = useState(false);\r\n  const onToggleOpen = useCallback(() => setOpen(!open), [open]);\r\n\r\n  return (\r\n    <>\r\n      <SearchBlock onClick={onToggleOpen}>\r\n        <MdOutlineSearch />\r\n      </SearchBlock>\r\n      <WeatherSideBlock opened={open}>\r\n        <WeatherInput onToggleOpen={onToggleOpen} />\r\n        {cities ? (\r\n          <WeatherList>\r\n            {cities.map((city) => (\r\n              <WeatherItem\r\n                key={city.name}\r\n                city={city}\r\n                isSelected={\r\n                  currentCity ? currentCity.name === city.name : false\r\n                }\r\n              />\r\n            ))}\r\n          </WeatherList>\r\n        ) : (\r\n          <NoCities>No cities added.</NoCities>\r\n        )}\r\n      </WeatherSideBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(WeatherSide);\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { RootState } from 'modules';\r\nimport WeatherMain from './main/WeatherMain';\r\nimport WeatherSide from './side/WeatherSide';\r\nimport { setCities } from 'modules/weather';\r\n\r\nconst WeatherAppBlock = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst WeatherApp = () => {\r\n  const cities = useSelector((state: RootState) => state.weather.cities);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const json = localStorage.getItem('marked_cities');\r\n    if (!json) return;\r\n\r\n    const cities = JSON.parse(json);\r\n    dispatch(setCities(cities));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\r\n      'marked_cities',\r\n      JSON.stringify(cities.filter((city) => city.marked)),\r\n    );\r\n  }, [cities]);\r\n\r\n  return (\r\n    <WeatherAppBlock>\r\n      <WeatherMain />\r\n      <WeatherSide />\r\n    </WeatherAppBlock>\r\n  );\r\n};\r\n\r\nexport default WeatherApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport rootReducer from './modules';\nimport WeatherApp from './components/WeatherApp';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// prevent default events\ndocument.ondragstart = () => false;\ndocument.onselectstart = () => false;\ndocument.oncontextmenu = () => false;\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(ReduxThunk)),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <WeatherApp />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}